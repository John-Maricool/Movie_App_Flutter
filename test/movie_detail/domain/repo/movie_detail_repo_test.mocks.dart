// Mocks generated by Mockito 5.4.0 from annotations
// in movie_app/test/movie_detail/domain/repo/movie_detail_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app/movie_detail/data/model/cast.dart' as _i6;
import 'package:movie_app/movie_detail/data/model/movie_detail.dart' as _i2;
import 'package:movie_app/movie_detail/data/model/video.dart' as _i5;

import 'movie_detail_repo_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetail_0 extends _i1.SmartFake implements _i2.MovieDetail {
  _FakeMovieDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieDetailDatasourceTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailDatasourceTest extends _i1.Mock
    implements _i3.MovieDetailDatasourceTest {
  MockMovieDetailDatasourceTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.MovieDetail> getMovieDetail(
    int? id,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [
            id,
            type,
          ],
        ),
        returnValue: _i4.Future<_i2.MovieDetail>.value(_FakeMovieDetail_0(
          this,
          Invocation.method(
            #getMovieDetail,
            [
              id,
              type,
            ],
          ),
        )),
      ) as _i4.Future<_i2.MovieDetail>);
}

/// A class which mocks [CastsAndVideosDatasourceTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockCastsAndVideosDatasourceTest extends _i1.Mock
    implements _i3.CastsAndVideosDatasourceTest {
  MockCastsAndVideosDatasourceTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Video>> getVideos(
    int? id,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVideos,
          [
            id,
            type,
          ],
        ),
        returnValue: _i4.Future<List<_i5.Video>>.value(<_i5.Video>[]),
      ) as _i4.Future<List<_i5.Video>>);
  @override
  _i4.Future<List<_i6.Cast>> getCast(
    int? id,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCast,
          [
            id,
            type,
          ],
        ),
        returnValue: _i4.Future<List<_i6.Cast>>.value(<_i6.Cast>[]),
      ) as _i4.Future<List<_i6.Cast>>);
}
