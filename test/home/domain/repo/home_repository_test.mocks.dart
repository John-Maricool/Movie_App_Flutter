// Mocks generated by Mockito 5.4.0 from annotations
// in movie_app/test/home/domain/repo/home_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app/core/data_model/movei_list_item_model.dart' as _i4;

import 'home_repository_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HomeDataSourceTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeDataSourceTest extends _i1.Mock
    implements _i2.HomeDataSourceTest {
  MockHomeDataSourceTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.MovieListItemModel>> getMovieCategory(
    String? category,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieCategory,
          [
            category,
            page,
          ],
        ),
        returnValue: _i3.Future<List<_i4.MovieListItemModel>>.value(
            <_i4.MovieListItemModel>[]),
      ) as _i3.Future<List<_i4.MovieListItemModel>>);
}

/// A class which mocks [NetworkInfoTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfoTest extends _i1.Mock implements _i2.NetworkInfoTest {
  MockNetworkInfoTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
