// Mocks generated by Mockito 5.4.0 from annotations
// in movie_app/test/home/presentation/screens/home_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i10;

import 'package:get/get.dart' as _i6;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app/core/data_model/movei_list_item_model.dart' as _i8;
import 'package:movie_app/core/state/state.dart' as _i5;
import 'package:movie_app/home/domain/usecases/home_category_usecase.dart'
    as _i2;
import 'package:movie_app/movie_detail/data/model/movie_detail.dart' as _i4;
import 'package:movie_app/movie_detail/domain/usecases/movie_detail_usease.dart'
    as _i3;

import 'home_test.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHomeCategoryUsecase_0 extends _i1.SmartFake
    implements _i2.HomeCategoryUsecase {
  _FakeHomeCategoryUsecase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailUsecase_1 extends _i1.SmartFake
    implements _i3.MovieDetailUsecase {
  _FakeMovieDetailUsecase_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetail_2 extends _i1.SmartFake implements _i4.MovieDetail {
  _FakeMovieDetail_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeState_3<T> extends _i1.SmartFake implements _i5.State<T> {
  _FakeState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_4<T> extends _i1.SmartFake
    implements _i6.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeControllerTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeControllerTest extends _i1.Mock
    implements _i7.HomeControllerTest {
  MockHomeControllerTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HomeCategoryUsecase get usecase => (super.noSuchMethod(
        Invocation.getter(#usecase),
        returnValue: _FakeHomeCategoryUsecase_0(
          this,
          Invocation.getter(#usecase),
        ),
      ) as _i2.HomeCategoryUsecase);
  @override
  set usecase(_i2.HomeCategoryUsecase? _usecase) => super.noSuchMethod(
        Invocation.setter(
          #usecase,
          _usecase,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MovieDetailUsecase get detailUsecase => (super.noSuchMethod(
        Invocation.getter(#detailUsecase),
        returnValue: _FakeMovieDetailUsecase_1(
          this,
          Invocation.getter(#detailUsecase),
        ),
      ) as _i3.MovieDetailUsecase);
  @override
  set detailUsecase(_i3.MovieDetailUsecase? _detailUsecase) =>
      super.noSuchMethod(
        Invocation.setter(
          #detailUsecase,
          _detailUsecase,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i8.MovieListItemModel> get data1 => (super.noSuchMethod(
        Invocation.getter(#data1),
        returnValue: <_i8.MovieListItemModel>[],
      ) as List<_i8.MovieListItemModel>);
  @override
  List<_i8.MovieListItemModel> get data2 => (super.noSuchMethod(
        Invocation.getter(#data2),
        returnValue: <_i8.MovieListItemModel>[],
      ) as List<_i8.MovieListItemModel>);
  @override
  List<_i8.MovieListItemModel> get data3 => (super.noSuchMethod(
        Invocation.getter(#data3),
        returnValue: <_i8.MovieListItemModel>[],
      ) as List<_i8.MovieListItemModel>);
  @override
  _i4.MovieDetail get detail => (super.noSuchMethod(
        Invocation.getter(#detail),
        returnValue: _FakeMovieDetail_2(
          this,
          Invocation.getter(#detail),
        ),
      ) as _i4.MovieDetail);
  @override
  _i5.State<dynamic> get state1 => (super.noSuchMethod(
        Invocation.getter(#state1),
        returnValue: _FakeState_3<dynamic>(
          this,
          Invocation.getter(#state1),
        ),
      ) as _i5.State<dynamic>);
  @override
  _i5.State<dynamic> get stateDetail => (super.noSuchMethod(
        Invocation.getter(#stateDetail),
        returnValue: _FakeState_3<dynamic>(
          this,
          Invocation.getter(#stateDetail),
        ),
      ) as _i5.State<dynamic>);
  @override
  _i5.State<dynamic> get state2 => (super.noSuchMethod(
        Invocation.getter(#state2),
        returnValue: _FakeState_3<dynamic>(
          this,
          Invocation.getter(#state2),
        ),
      ) as _i5.State<dynamic>);
  @override
  _i5.State<dynamic> get state3 => (super.noSuchMethod(
        Invocation.getter(#state3),
        returnValue: _FakeState_3<dynamic>(
          this,
          Invocation.getter(#state3),
        ),
      ) as _i5.State<dynamic>);
  @override
  _i6.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_4<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i6.InternalFinalCallback<void>);
  @override
  _i6.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_4<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i6.InternalFinalCallback<void>);
  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);
  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Disposer addListener(_i9.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i9.Disposer);
  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListenerId(
    Object? id,
    _i10.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Disposer addListenerId(
    Object? key,
    _i9.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i9.Disposer);
  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
